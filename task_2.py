"""
Напишите функцию key_params, принимающую на вход только ключевые параметры и возвращающую словарь,
где ключ - значение переданного аргумента, а значение - имя аргумента.
Если ключ не хешируем, используйте его строковое представление.
"""

"""
У вас есть банковская карта с начальным балансом равным 0 у.е. Вы хотите управлять этой картой, 
выполняя следующие операции, для выполнения которых необходимо написать следующие функции:

check_multiplicity(amount): Проверка кратности суммы при пополнении и снятии.
deposit(amount): Пополнение счёта.
withdraw(amount): Снятие денег.
exit(): Завершение работы и вывод итоговой информации о состоянии счета и проведенных операциях.

Пополнение счета:
Функция deposit(amount) позволяет клиенту пополнять свой счет на определенную сумму. 
Пополнение счета возможно только на сумму, которая кратна MULTIPLICITY.

Снятие средств:
Функция withdraw(amount) позволяет клиенту снимать средства со счета. 
Сумма снятия также должна быть кратной MULTIPLICITY. При снятии средств начисляется комиссия в процентах от 
снимаемой суммы, которая может варьироваться от MIN_REMOVAL до MAX_REMOVAL.

Завершение работы:
Функция exit() завершает работу с банковским счетом. Перед завершением, если на счету больше RICHNESS_SUM, 
начисляется налог на богатство в размере RICHNESS_PERCENT процентов.

Проверка кратности суммы:
Функция check_multiplicity(amount) проверяет, кратна ли сумма amount заданному множителю MULTIPLICITY. 

Реализуйте программу для управления банковским счетом, используя библиотеку decimal для точных вычислений.
"""
import typing


def key_params(**kwargs):
    my_dict = {}
    for key, value in kwargs.items():
        if isinstance(value, typing.Hashable):
            my_dict[value] = str(key)
        else:
            my_dict[str(value)] = str(key)
    return my_dict


params = key_params(a=1, b='hello', c=[1, 2, 3], d={})
print(params)
